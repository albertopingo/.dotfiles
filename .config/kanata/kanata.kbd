;;==========================================================================;;
;;                                                                          ;;
;;                         Kanata 33/34-key Config                          ;;
;;                            by Alberto Pingo                              ;;
;;                                                                          ;;
;;==========================================================================;;
;;                                                                          ;;
;;                            Based on Arsenik                              ;;
;;                   https://github.com/OneDeadKey/arsenik                  ;;
;;                                                                          ;;
;;                   Live-reload Config: Space + Backspace                  ;;
;;                                                                          ;;
;;                                                                          ;;
;; Notes:                                                                   ;;
;; - Key 'backspace' only for live-reload                                         ;;
;; - From 33 to 34 keys - Added Capslock as Esc (Not needed, testing)       ;;
;;                                                                          ;;


;;--------------------------------------------------------------------------;;
;;                                Variables                                 ;;
;;--------------------------------------------------------------------------;;
;;                        Timing for tap-hold effects                       ;;
;;                                                                          ;;

(defvar
  tap_timeout 180         ;; Press twice timing to enable repetitions  
  hold_timeout 200        ;; Held time to become a layer shift  
  long_hold_timeout 220   ;; Higher value for typing keys, prevent unexpected hold effect.
)


;;--------------------------------------------------------------------------;;
;;                                  Source                                  ;;
;;--------------------------------------------------------------------------;;
;;                                Raw inputs                                ;;
;;                                                                          ;;

(defsrc
	esc      `    1    2    3    4    5    6    7    8    9    0    -    =  bspc
	tab      q    w    e    r    t    y    u    i    o    p    [    ]    \  '
	caps     a    s    d    f    g    h    j    k    l    ;                 ret
	lshift   z    x    c    v    b    n    m    ,    .    /                 rshift
	lctrl lmeta    lalt           spc            ralt          rmeta  menu  rctrl
							 up lft down rght
)


;;--------------------------------------------------------------------------;;
;;                                  Layers                                  ;;
;;--------------------------------------------------------------------------;;
;;                         Base, Nav, Symb and Func                         ;;
;;                                                                          ;;

;;----------------------------------------;;
;;               Base Layer               ;;
;;----------------------------------------;;
;;       Layer-taps + home-row mods       ;;

(deflayer base
	XX       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX XX
	tab      q    w    e    r    t    y    u    i    o    p    XX   XX   XX XX
	esc      @aa  @ss  @dd  @ff  g    h    @jj  @kk  @ll  @rs               XX
	lshift   z    x    c    v    b    n    m    ,    .    /                 rshift
	XX       XX    @nav           @sym           @sft             XX   XX   XX
							XX   XX   XX   XX
)

(defalias
  ;; Space tap / `Nav layer` held 
  nav (tap-hold $tap_timeout $long_hold_timeout ret (layer-while-held navigation))

  ;; Backspace tap / Lshift held
  sft (tap-hold $tap_timeout $hold_timeout bspc lsft) ;; *Can be another layer if needed*

  ;; Enter tap / `Symbols layer` held
  sym (tap-hold $tap_timeout $hold_timeout spc (layer-while-held symbols))

  ;; Home-row mods (HRM)
  aa (tap-hold $tap_timeout $long_hold_timeout a lsft)
  ss (tap-hold $tap_timeout $long_hold_timeout s lmet)
  dd (tap-hold $tap_timeout $long_hold_timeout d lalt)
  ff (tap-hold $tap_timeout $long_hold_timeout f lctl)
  
  jj (tap-hold $tap_timeout $long_hold_timeout j rctl)
  kk (tap-hold $tap_timeout $long_hold_timeout k ralt)
  ll (tap-hold $tap_timeout $long_hold_timeout l rmet)
  rs (tap-hold $tap_timeout $long_hold_timeout ; rsft) 
)

;;----------------------------------------;;
;;              Symbol Layer              ;;
;;----------------------------------------;;
;;  Lafayette/Ergoâ€‘L Programmation layer  ;;

(deflayer symbols
	XX       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX XX
	tab      @^   @<   @>   @$   @%   @@   @&   @*   @'   @`   XX   XX   XX XX
	esc      @{   @pl  @pr  @}   @=   @\   @+   @-   XX   @:                XX
	lshift   @~   @[   @]   @_   @#   @|   @!   XX   @''  @?            rshift
	XX       XX     _              spc            _               XX   XX   XX
							XX   XX   XX   XX
)

;;----------------------------------------;;
;;          Vim-Navigation Layer          ;;
;;----------------------------------------;;
;;         Vim-like arrows on HJKL        ;;
;;       Live reload = `lrld` action      ;; 

(deflayer navigation
	XX       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX lrld
	tab      @1   @2   @3   @4   @5   @6   @7   @8   @9   @0   XX   XX   XX XX
	esc      @ls  @lm  @la  @lc  tab  lft  down up   rght @fun              XX
	lshift   @udo @cut @cp  @pst @rdo ins  pgdn pgup home end           rshift
	XX       XX     _             esc           del             XX   XX   XX
							XX   XX   XX   XX
)

;; Sub-layer - Function keys
(deflayer funpad
	XX       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX XX
	tab      f1   f2   f3   f4   f5   XX   XX   XX   XX   XX   XX   XX   XX XX
	esc      f6   f7   f8   f9   f10  XX   @lc  @la  @lm  _                 XX
	lshift   f11  f12  XX   XX   XX   XX   XX   XX   XX   XX            rshift
	XX       XX     @ls             _              _              XX   XX   XX
							XX   XX   XX   XX
)

(defalias
  fun (layer-while-held funpad)

  ;; Mouse wheel emulation
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
)


;;--------------------------------------------------------------------------;;
;;                                  Aliases                                 ;;
;;--------------------------------------------------------------------------;;
;;                    Qwerty/Colemak Windows/Linux aliases                  ;;
;;                                                                          ;;

;; Navigation layer
(defalias
  0 0
  1 1
  2 2
  3 3
  4 4
  5 5
  6 6
  7 7
  8 8
  9 9
  , ,
  . .

  ;; Cross-platform in any terminal emulator or program
  cp  (macro C-ins)
  pst (macro S-ins)
  cut   (macro S-del)
  udo  (macro C-z)
  rdo  (macro C-y)
)

;; Symbols layer
(defalias
  ^  S-6
  <  S-,
  >  S-.
  $  S-4
  %  S-5
  @  S-2
  &  S-7
  *  S-8
  '  '
  `  `

  {  S-[
  pl S-9
  pr S-0
  }  S-]
  =  =
  \  \
  +  S-=
  -  -
  /  /
  '' S-'

  ~  S-`
  [  [
  ]  ]
  _  S--
  #  S-3
  |  S-\
  !  S-1
  ;  ;
  :  S-;
  ?  S-/
)

;; Shorten
(defalias
  ls lshift
  lm lmet
  la lalt
  lc lctl
)


;;--------------------------------------------------------------------------;;
;;                               Extra config                               ;;
;;--------------------------------------------------------------------------;;
;;                                                                          ;;

(defcfg  
  process-unmapped-keys yes       ;; Passthrough keys not defined in defsrc
  windows-altgr cancel-lctl-press ;; Fixes altgr for Windows
)

;; vim: set ft=lisp   ????